// Mocks generated by Mockito 5.4.4 from annotations
// in starter_examples/test/utility/calculator/subtract.welltested_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:starter_examples/utility/calculator.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Calculator].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalculator extends _i1.Mock implements _i2.Calculator {
  MockCalculator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double add(
    double? a,
    double? b,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #add,
          [
            a,
            b,
          ],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  double subtract(
    double? a,
    double? b,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #subtract,
          [
            a,
            b,
          ],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  double multiply(
    double? a,
    double? b,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #multiply,
          [
            a,
            b,
          ],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  double divide(
    double? a,
    double? b,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #divide,
          [
            a,
            b,
          ],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  double power(
    double? x,
    double? y,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #power,
          [
            x,
            y,
          ],
        ),
        returnValue: 0.0,
      ) as double);
}
